# Standard Configuration for DFINE Segmentation
# Balanced performance and accuracy - Updated for unified training

# Inherit from base configuration
base: "base.yaml"

# Model Tier
tier: "standard"

# DFINE Model Configuration (overrides base if needed)
dfine:
  config_path: "base_dfine/dfine_hgnetv2_x_obj2coco.yml"
  checkpoint_path: "base_dfine/dfine_x_obj2coco.pth"

# Dataset Configuration (overrides base if needed)
dataset:
  name: "pascal_person_parts"
  root_dir: "datasets/pascal_person_parts"
  num_classes: 7
  class_names: ["background", "head", "torso", "arms", "hands", "legs", "feet"]
  image_size: 640

# Model-specific Configuration
model:
  segmentation_head:
    type: "standard"
    feature_dim: 256
    dropout_rate: 0.1
    
    # Standard FPN settings
    fpn:
      enable_fusion_weights: true
      
    # Standard ASPP settings  
    aspp:
      dilations: [1, 6, 12]
      enable_global_pool: true
      
    # Standard decoder settings
    decoder:
      stages: 3
      enable_batch_norm: true

# Training Configuration (overrides base)
training:
  batch_size: 16
  epochs: 150
  learning_rate: 0.0005  # 5e-4 in decimal
  weight_decay: 0.0001  # 1e-4 in decimal
  
  # Scheduler settings
  scheduler:
    type: "cosine_warmup"
    T_0: 15
    T_mult: 2
    eta_min: 0.000001  # 1e-6 in decimal
  
  # Optimization settings
  gradient_clipping: 1.0
  freeze_detection: true
  unfreeze_epoch: 35
  backbone_lr_factor: 0.1
  
  # Standard tier specific settings
  multi_scale_training: true
  augmentation_strength: "medium"

# Loss Configuration
loss:
  type: "standard"
  focal_alpha: 0.25
  focal_gamma: 2.0
  dice_weight: 0.4
  ce_weight: 0.2
  boundary_weight: 0.3
  ignore_index: 255

# Performance Targets
targets:
  accuracy:
    miou: 0.70  # Target 70% mIoU
    pixel_accuracy: 0.85
    class_consistency: 0.75
  
  speed:
    min_fps: 30  # Target 30+ FPS on RTX 3080
    max_latency_ms: 35
  
  memory:
    max_gpu_mb: 4000  # Max 4GB GPU memory
    max_model_mb: 100  # Max 100MB model size

# System Configuration (overrides base if needed)
system:
  num_workers: 4
  pin_memory: true
  device: "auto"

# Output Configuration
output:
  base_dir: "outputs/standard"
  save_every: 10
  save_best: true

# Logging Configuration
logging:
  wandb:
    project: "dfine-standard-segmentation"
    entity: null
    tags: ["standard", "balanced", "unified"]
  
  tensorboard: false
  log_every: 20
  print_every: 1

# Evaluation Configuration
evaluation:
  metrics:
    - "miou"
    - "pixel_accuracy"
    - "class_iou"
    - "class_accuracy"
    - "class_precision"
    - "f1_score"
  
  save_predictions: false
  visualize_samples: 5

# TensorRT Configuration for deployment
tensorrt:
  fp16: true
  int8: true
  workspace_gb: 4
  max_batch_size: 1
  
  # Standard tier optimization
  optimization_level: 3
  enable_dla: false
  
  # Input configuration
  input_shape: [1, 3, 640, 640]
  
  calibration:
    mode: "mixed"  # pascal, coco, mixed
    max_images: 500
    pascal_ratio: 0.7

# Platform Configuration
platform:
  general_purpose:
    rtx_3070: true
    rtx_3080: true
    rtx_4070: true
    gtx_1080: true
  
  server:
    single_gpu: true
    multi_gpu: false
  
  workstation:
    content_creation: true
    development: true

# Features enabled for standard tier
features:
  # Performance features
  performance:
    multi_scale_training: true
    progressive_unfreezing: true
    gradient_clipping: true
    
  # Quality features
  quality:
    weighted_feature_fusion: true
    global_context_pooling: true
    batch_normalization: true
    
  # Analysis features
  analysis:
    detailed_metrics: true
    class_wise_evaluation: true

# Comments for clarity
comments: |
  Standard tier configuration provides:
  - Balanced accuracy and speed performance
  - Good for general purpose applications
  - Target: ~70% mIoU at 30+ FPS
  - Memory efficient: <4GB GPU, <100MB model
  - Multi-scale training for robustness
  - Progressive backbone unfreezing
  - Suitable for most deployment scenarios
  - Integrates with unified training script